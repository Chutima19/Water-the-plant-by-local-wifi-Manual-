/* Create a WiFi access point and provide a web server on it for wireless controlling Switch (toggle).*/

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>

#ifndef APSSID
#define APSSID "WUPHY_G4"
#define APPSK  "12345678"
#endif

/* Set these to your desired credentials. */
const char *ssid = APSSID;
const char *password = APPSK;
const int SwitchPin=13;//D7; //=D4;
boolean SwitchStatus =false;
String strSwitchStatus;
String strButtonLabel;

ESP8266WebServer server(80);

/* Just a little test message.  Go to http://192.168.4.1 in a web browser
   connected to this access point to see it.
*/

//HTML data send to Clients;

String getHtmlPage() {
  if(SwitchStatus){
    strSwitchStatus = "On now";
    strButtonLabel = "Turn Off";
    Serial.println("Switch on now");
    } else{
      strSwitchStatus = "Off now";
      strButtonLabel = "Turn On";
      }
   String css= "<style>.button{background-color: #990033;border:none;border-radius:4px;color:white;padding:7px;text-align: center;text-decoration:none;text-decoration:none;}</style>";   
   String strHtml = "<!DOCTYPE html><html><head>";
   strHtml+=css;
  strHtml+= "<meta http-equiv=\"Content-Type\" content='\"text/html;charset=UTF-8'>";
  strHtml+= "<meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,";
  strHtml+="minimum-scale=1 width=device-width, height=device-height\">";
  strHtml+="<title>Controller</title>";
  strHtml+="</head><body><h1>Controller/ควบคุมการเปิด-ปิด </h1>";
  strHtml+="<h3>LED/Switch: ";
  strHtml+="</h3>";
  strHtml+="<br>";
  strHtml+="<a href='./toggle' class= 'button'>";//'>ON</a><br><br><a href='./off'>OFF</a>";
  strHtml+=strButtonLabel;
   strHtml+="</a>";
  strHtml+="</body></html>";
  return strHtml;
}

void setup() {
  delay(1000);
  Serial.begin(115200);
  Serial.println();
  Serial.print("Configuring access point...");
  /* You can remove the password parameter if you want the AP to be open. */
  WiFi.softAP(ssid, password);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
  
  server.on("/", handleRoot);
  server.on("/toggle",toggleSwitch);
  server.begin();
  Serial.println("HTTP server started");
  pinMode(SwitchPin,OUTPUT);
  digitalWrite(SwitchPin,HIGH);
  
}

void toggleSwitch(){
  if(SwitchStatus){
    digitalWrite(SwitchPin,HIGH);
    SwitchStatus = false;
    Serial.println("now off");
  }else{
    digitalWrite(SwitchPin,LOW);
    SwitchStatus = true;
    Serial.println("now on");
    }
  server.send(200, "text/html",getHtmlPage()); 
}
void handleRoot() {
  server.send(200, "text/html",getHtmlPage());
}
void loop() {
  server.handleClient();
}
